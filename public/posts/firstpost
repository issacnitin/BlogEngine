<h1>Architecture Independent Multi-Kernel Operating Systems</h1>
<p>Linux, Windows, OS/2, Google Fuschia.. the list is endless. The operating systems, the part of it that interacts directly with hardware.. except the hardware is same. So why exactly different Kernels?</p>
<p>I'm imagining a line of operating systems which can replace the kernel dependency.. one that can support running applications build for any OS. That'd be a killer OS, right? Maybe not, no, not for scientific and research, but definitely for normal non-geek users.
Everyone ends up learning different features of windows, and if they're asked to or shown to Mac OS/Ubuntu, they go dumbs. Let's solve that right here.
By building a middleware between OS kernels and hardware, we've achieved just what we need - removing the kernel dependency for OS. And hey, it's already built! The hypervisors! </p>
<p>Now, if we can run multiple kernels at the same time, then surely applications built on top of the kernels should also work fine?
But how'd we run multiple kernels at the same time? Don't they interact directly with hardware? Won't that cause conflicts? Definitely. But hey, the problem is already solved! How would a Virtual Machine running on a hypervisor work without managing the complications of multiple kernels?
Now would this approach be costly? Definitely. Would it be worth it? Well seeing the rate at which the core counts increase in a single chip CPU, an 8 core CPU can surely run 2 OS with 4 cores each yeah?
Now all we got to do is combine a couple of himalayan engineering systems to work in perfect harmony. There are very interesting system problems to be solved in the process, along with managing the complications of tightly coupled systems. And so I'm inviting you, to the labrynth.</p>
<a href="https://github.com/issacnitin/HackOS">Hack OS (GitHub)</a>  